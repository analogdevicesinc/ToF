'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-d9134559.js');

const badgeCss = ".label{padding-left:4px;padding-right:4px;text-align:center;color:white;font-size:var(--font-size-small, 12px);font-family:var(--font-family-body, \"Inter\", sans-serif);font-weight:500;line-height:16px;word-wrap:break-word}.label.urgent{color:var(--hmc-color-notification-danger-strong-text, var(--hmc-color-content-inverse, var(--hmc-color-gray-white, #fff)))}.label.information{color:var(--hmc-color-notification-info-strong-text, var(--hmc-color-content-inverse, var(--hmc-color-gray-white, #fff)))}.badge{min-width:16px;min-height:16px;border-radius:100px;overflow:hidden;flex-direction:column;justify-content:center;align-items:center;display:inline-flex;outline:1px solid var(--hmc-color-layout-container, var(--hmc-color-gray-white, #fff))}.badge.dots{display:inline-flex;min-width:6px;min-height:6px;max-width:6px;max-height:6px;padding:0px 0px}.badge.dots span{display:none}.badge.urgent{background:var(--hmc-color-notification-danger-strong-background, var(--hmc-color-system-danger-default, var(--hmc-color-red-700, #c81a28)))}.badge.information{background:var(--hmc-color-notification-info-strong-background, var(--hmc-color-content-default, var(--hmc-color-gray-black, #101820)))}";

const HmcBadge = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.kind = 'digits';
    this.status = 'urgent';
    this.number = 1;
    this.maxNumber = 999;
  }
  componentWillRender() {
    this.number = this.fixNumberInteger(this.number);
    this.maxNumber = this.fixNumberInteger(this.maxNumber);
  }
  fixNumberInteger(num) {
    if (num < 0) {
      console.error('Number cannot be negative!');
      return 0;
    }
    else if (!Number.isInteger(num) || num % 1 !== 0) {
      console.error('The number can only be an integer. The number is rounded.');
      return Math.round(num);
    }
    return num;
  }
  getLabel() {
    if (this.number > this.maxNumber) {
      return this.maxNumber + '+';
    }
    else {
      return this.number.toString();
    }
  }
  render() {
    const { kind, status } = this;
    const labelClass = {
      label: true,
      [status]: true,
    };
    const classes = {
      badge: true,
      [kind]: true,
      [status]: true,
    };
    return (index.h(index.Host, null, index.h("div", { class: classes }, index.h("span", { class: labelClass }, this.getLabel()))));
  }
};
HmcBadge.style = badgeCss;

exports.hmc_badge = HmcBadge;
