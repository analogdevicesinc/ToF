'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-d9134559.js');
const popperLite = require('./popper-lite-9b63da5d.js');

const dropdownMenuCss = ":host{font-family:var(--font-family-body, \"Inter\", sans-serif);min-width:var(--hmc-dropdown-menu-min-width, 220px);max-width:var(--hmc-dropdown-menu-max-width, 220px);z-index:var(--z-index-popover, 9100);position:absolute}.list-container{display:none;flex-direction:column;gap:6px;padding:6px 4px;border-radius:8px;border:1px solid var(--hmc-color-layout-divider-default, var(--hmc-color-gray-300, #b7bbc3));box-shadow:0px 5px 5px 0px rgba(34, 37, 47, 0.1), 0px 0px 5px 0px rgba(34, 37, 47, 0.1);background-color:var(--hmc-color-layout-container, var(--hmc-color-gray-white, #fff));min-height:16px;margin-left:-4px}.list-container.show{display:flex}.list-container.md{margin:8px 0}.list-container.right{right:0px}.list-container.top{bottom:30px}.list-container.hidden{display:none;visibility:hidden}";

const HmcDropdownMenu = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.handleMenu = () => {
      if (this.isOpen) {
        const xoffset = 0;
        this.menuInstance = popperLite.createPopper(this.triggerElement, this.menuEl, {
          placement: 'bottom',
          strategy: 'absolute',
          modifiers: [
            {
              name: 'offset',
              options: {
                offset: [xoffset, 8],
              },
            },
            {
              name: 'flip',
              options: {
                flipVariations: false,
              },
            },
            popperLite.flip,
            popperLite.offset,
          ],
        });
      }
      else if (this.menuInstance) {
        this.menuInstance.destroy();
        this.menuInstance = null;
      }
    };
    this.triggerId = undefined;
    this.isOpen = false;
  }
  componentDidLoad() {
    this.selectMenuTarget();
    if (this.triggerElement) {
      this.triggerElement.addEventListener('click', ev => {
        ev.stopPropagation();
        this.isOpen = !this.isOpen;
      });
      this.handleMenu();
    }
  }
  selectMenuTarget() {
    var _a;
    if (this.triggerId !== '') {
      const rootElement = this.el.getRootNode();
      this.triggerElement =
        (_a = document.getElementById(this.triggerId)) !== null && _a !== void 0 ? _a : rootElement.querySelector(`#${this.triggerId}`);
    }
  }
  render() {
    const { isOpen } = this;
    const listContainerClasses = {
      'list-container': true,
      'show': isOpen,
    };
    return (index.h(index.Host, { role: "menu" }, index.h("div", { ref: ref => (this.menuEl = ref), class: listContainerClasses }, index.h("slot", null))));
  }
  get el() { return index.getElement(this); }
};
HmcDropdownMenu.style = dropdownMenuCss;

exports.hmc_dropdown_menu = HmcDropdownMenu;
