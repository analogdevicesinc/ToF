'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-d9134559.js');

const messageCss = ".message{width:fit-content;font-family:var(--font-family-body, \"Inter\", sans-serif);font-size:var(--font-size-small, 12px);overflow:hidden;box-sizing:border-box;line-height:16px;border-radius:4px;display:flex;align-items:center;color:var(--hmc-color-notification-info-default-text, var(--hmc-color-system-info-default, var(--hmc-color-content-default, var(--hmc-color-gray-black, #101820))))}.message hmc-icon{margin-right:4px}.message.success{color:var(--hmc-color-notification-success-default-text, var(--hmc-color-content-default, var(--hmc-color-gray-black, #101820)))}.message.success hmc-icon{color:var(--hmc-color-notification-success-default-graphic, var(--hmc-color-system-success-default, var(--hmc-color-green-500, #2e9e6f)))}.message.warning{color:var(--hmc-color-notification-warning-default-text, var(--hmc-color-content-default, var(--hmc-color-gray-black, #101820)))}.message.warning hmc-icon{color:var(--hmc-color-notification-warning-default-graphic, var(--hmc-color-system-warning-default, var(--hmc-color-orange-500, #e76423)))}.message.error{color:var(--hmc-color-notification-danger-default-text, var(--hmc-color-system-danger-default, var(--hmc-color-red-700, #c81a28)))}.message.error hmc-icon{color:var(--hmc-color-notification-danger-default-graphic, var(--hmc-color-system-danger-default, var(--hmc-color-red-700, #c81a28)))}.message.fullWidth{width:100%}";

/**
 * @slot - An unnamed slot is used to pass a content to the Message.
 */
const statusIconMap = {
  success: 'check-circle-s',
  warning: 'warning-s',
  error: 'error-s',
  info: 'info-s',
};
const HmcMessage = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.isFullWidth = false;
    this.status = 'info';
    this.iconName = undefined;
  }
  render() {
    const { status, isFullWidth, iconName } = this;
    const classList = {
      message: true,
      [status]: true,
      fullWidth: isFullWidth,
    };
    const icon = (iconName !== null && iconName !== void 0 ? iconName : statusIconMap[status]);
    return (index.h("div", { class: classList }, index.h("hmc-icon", { name: icon }), index.h("slot", null)));
  }
};
HmcMessage.style = messageCss;

exports.hmc_message = HmcMessage;
