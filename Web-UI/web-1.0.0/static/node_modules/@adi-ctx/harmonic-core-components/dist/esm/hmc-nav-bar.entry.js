import { r as registerInstance, h, g as getElement } from './index-9bcb3512.js';

const navBarCss = ":host{width:100%}.navbar{display:flex;background-color:var(--hmc-color-layout-container, var(--hmc-color-gray-white, #fff));border-bottom:1px solid var(--hmc-color-layout-divider-default, var(--hmc-color-gray-300, #b7bbc3))}.navbar .left-actions{flex:0 0 25%;display:flex;margin-right:auto}.navbar .left-side-bar{display:flex;border-right:1px solid var(--hmc-color-layout-divider-default, var(--hmc-color-gray-300, #b7bbc3));justify-content:center;flex-direction:column}.navbar .logo{align-self:center}.navbar .links{padding:8px 0;display:flex;gap:4px;flex:1 0 0;justify-content:center;align-items:center}.navbar .right-actions{flex:0 0 25%;display:flex;align-items:center;margin-left:auto;justify-content:flex-end}";

const HmcNavBar = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.leftActionsEnabled = false;
  }
  render() {
    const { leftActionsEnabled } = this;
    const classList = {
      navbar: true,
    };
    return (h("nav", { class: classList }, h("div", { class: "left-actions" }, leftActionsEnabled && (h("div", { class: "left-side-bar" }, h("slot", { name: "left-actions" }))), h("div", { class: "logo" }, h("slot", { name: "logo" }))), h("div", { class: "links", role: "list" }, h("slot", null)), h("div", { class: "right-actions" }, h("slot", { name: "right-actions" }))));
  }
  get el() { return getElement(this); }
};
HmcNavBar.style = navBarCss;

export { HmcNavBar as hmc_nav_bar };
