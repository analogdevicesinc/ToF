import { newE2EPage } from '@stencil/core/testing';
describe('hmc-tooltip', () => {
  let page;
  describe('when hovered', () => {
    it('should open the tooltip', async () => {
      page = await newE2EPage();
      await page.setContent(`
      <hmc-input-field
      id="input"
      placeholder="Hover this input"
      ></hmc-input-field>
      <hmc-tooltip
        trigger-id="input"
      >
      `);
      const tooltip = await page.find('hmc-tooltip');
      page.hover('hmc-input-field');
      await page.waitForChanges();
      expect(await tooltip.getProperty('isOpen')).toBe(true);
      page.mouse.move(50, 0);
      await page.waitForChanges();
      expect(await tooltip.getProperty('isOpen')).toBe(false);
    });
    it('should do nothing to toggletip', async () => {
      page = await newE2EPage();
      await page.setContent(`
      <hmc-input-field
      id="input"
      placeholder="Hover this input"
      ></hmc-input-field>
      <hmc-tooltip
        toggle
        trigger-id="input"
      >
      `);
      const tooltip = await page.find('hmc-tooltip');
      page.hover('hmc-input-field');
      await page.waitForChanges();
      expect(await tooltip.getProperty('isOpen')).toBe(false);
    });
  });
  describe('when clicked', () => {
    it('should open the toggletip', async () => {
      page = await newE2EPage();
      await page.setContent(`
      <hmc-button
      id="btn"
      >BUTTON</hmc-button>
      <hmc-tooltip
        toggle
        trigger-id="btn"
      >
      `);
      const tooltip = await page.find('hmc-tooltip');
      const btn = await page.find('hmc-button');
      btn.click();
      await page.waitForChanges();
      expect(await tooltip.getProperty('isOpen')).toBe(true);
      page.keyboard.press('Escape');
      await page.waitForChanges();
      expect(await tooltip.getProperty('isOpen')).toBe(false);
    });
  });
});
