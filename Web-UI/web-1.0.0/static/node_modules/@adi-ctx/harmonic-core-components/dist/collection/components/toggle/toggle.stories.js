import { html } from 'lit-html';

import readme from './readme.md';
import documentation from './toggle-documentation.mdx';

export default {
  title: 'Components/Toggle',
  parameters: {
    notes: readme,
    docs: {
      page: documentation,
    },
  },
  argTypes: {
    size: {
      control: {
        type: 'inline-radio',
        options: ['xs', 'md'],
      },
    },
    onChanged: { action: 'changed' },
  },
};
const style = html`<style>
  .flex {
    display: flex;
    gap: 16px;
    align-items: flex-end;
  }
</style>`;
export const Playground = ({
  isChecked,
  isDisabled,
  label,
  isFullWidth,
  size,
  onChanged,
}) =>
  html`
    <hmc-toggle
      label=${label}
      checked=${isChecked}
      disabled=${isDisabled}
      full-width=${isFullWidth}
      size=${size}
      @changed=${onChanged}
    ></hmc-toggle>
  `;

Playground.args = {
  isChecked: false,
  isDisabled: false,
  isFullWidth: false,
  label: 'Label',
  size: 'md',
};
export const States = ({ hasLabel, isFullWidth, size, onChanged }) => {
  const label = 'Label';
  return html`
    ${style}
    <div class="flex">
      <hmc-toggle
        label=${hasLabel ? label : ''}
        checked="false"
        disabled="false"
        full-width=${isFullWidth}
        size=${size}
        @changed=${onChanged}
      ></hmc-toggle>
      <hmc-toggle
        label=${hasLabel ? label : ''}
        checked="true"
        disabled="false"
        full-width=${isFullWidth}
        size=${size}
        @changed=${onChanged}
      ></hmc-toggle>
      <hmc-toggle
        label=${hasLabel ? label : ''}
        checked="false"
        disabled="true"
        full-width=${isFullWidth}
        size=${size}
        @changed=${onChanged}
      ></hmc-toggle>
      <hmc-toggle
        label=${hasLabel ? label : ''}
        checked="true"
        disabled="true"
        full-width=${isFullWidth}
        size=${size}
        @changed=${onChanged}
      ></hmc-toggle>
    </div>
  `;
};
States.args = {
  hasLabel: true,
  isFullWidth: false,
  size: 'md',
};
