import { newSpecPage } from '@stencil/core/testing';
jest.mock('@popperjs/core/lib/modifiers/flip', jest.fn());
jest.mock('@popperjs/core/lib/dom-utils/getLayoutRect', jest.fn());
jest.mock('@popperjs/core/lib/modifiers/offset', jest.fn());
jest.mock('@popperjs/core/lib/popper-lite', () => {
  return {
    createPopper: jest.fn(() => ({ destroy: jest.fn() })),
  };
});
// Jest mocks need to occur before imports
// eslint-disable-next-line import/first
import { HmcTooltip } from '../tooltip';
describe('hmc-tooltip', () => {
  it('builds', () => {
    expect(new HmcTooltip()).toBeTruthy();
  });
  describe('renders', () => {
    let page;
    beforeEach(async () => {
      page = await newSpecPage({
        components: [HmcTooltip],
      });
    });
    it('should render default component', async () => {
      await page.setContent('<hmc-tooltip></hmc-tooltip>');
      expect(page.root).toMatchInlineSnapshot(`
        <hmc-tooltip>
          <mock:shadow-root>
            <div class="wrapper">
              <div class="tooltip">
                <div class="title"></div>
                <slot></slot>
              </div>
              <div id="arrow"></div>
            </div>
          </mock:shadow-root>
        </hmc-tooltip>
      `);
    });
    it('should render toggle component', async () => {
      await page.setContent('<hmc-tooltip toggle></hmc-tooltip>');
      expect(page.root).toMatchInlineSnapshot(`
        <hmc-tooltip toggle="">
          <mock:shadow-root>
            <div class="wrapper">
              <div class="toggle tooltip">
                <div class="title"></div>
                <slot></slot>
              </div>
              <div id="arrow"></div>
            </div>
          </mock:shadow-root>
        </hmc-tooltip>
      `);
    });
  });
});
