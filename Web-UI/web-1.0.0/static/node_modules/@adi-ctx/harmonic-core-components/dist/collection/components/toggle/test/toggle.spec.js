import { newSpecPage } from '@stencil/core/testing';
import { HmcToggle } from '../toggle';
let page;
describe('hmc-toggle', () => {
  it('builds', async () => {
    expect(new HmcToggle()).toBeTruthy();
  });
  describe('renders', () => {
    beforeEach(async () => {
      page = await newSpecPage({
        components: [HmcToggle],
      });
    });
    it('should render default component', async () => {
      await page.setContent('<hmc-toggle>Toggle</hmc-toggle>');
      expect(page.root).toMatchInlineSnapshot(`
        <hmc-toggle aria-checked="false" role="switch" tabindex="0">
          <mock:shadow-root>
            <div class="container md">
              <div class="toggle">
                <div class="toggle-inner"></div>
              </div>
              <input aria-checked="false" id="hmc-toggle" role="switch" tabindex="-1" type="checkbox">
            </div>
          </mock:shadow-root>
          Toggle
          <input class="aux-input" name="undefined" type="hidden" value="">
        </hmc-toggle>
      `);
    });
    it('should render component in selected state', async () => {
      await page.setContent('<hmc-toggle checked="true">Toggle</hmc-toggle>');
      expect(page.root).toMatchInlineSnapshot(`
        <hmc-toggle aria-checked="true" checked="true" role="switch" tabindex="0">
          <mock:shadow-root>
            <div class="container md">
              <div class="checked toggle">
                <div class="toggle-inner"></div>
              </div>
              <input aria-checked="true" id="hmc-toggle" role="switch" tabindex="-1" type="checkbox">
            </div>
          </mock:shadow-root>
          Toggle
          <input class="aux-input" name="undefined" type="hidden" value="on">
        </hmc-toggle>
      `);
    });
    it('should render component in disabled state', async () => {
      await page.setContent('<hmc-toggle disabled="true">Toggle</hmc-toggle>');
      expect(page.root).toMatchInlineSnapshot(`
        <hmc-toggle aria-checked="false" class="disabled" disabled="true" role="switch" tabindex="-1">
          <mock:shadow-root>
            <div class="container md">
              <div class="disabled toggle">
                <div class="toggle-inner"></div>
              </div>
              <input aria-checked="false" disabled="" id="hmc-toggle" role="switch" tabindex="-1" type="checkbox">
            </div>
          </mock:shadow-root>
          Toggle
          <input class="aux-input" disabled="" name="undefined" type="hidden" value="">
        </hmc-toggle>
      `);
    });
    it('should render component in disabled selected state', async () => {
      await page.setContent('<hmc-toggle disabled="true" checked="true">Toggle</hmc-toggle>');
      expect(page.root).toMatchInlineSnapshot(`
        <hmc-toggle aria-checked="true" checked="true" class="disabled" disabled="true" role="switch" tabindex="-1">
          <mock:shadow-root>
            <div class="container md">
              <div class="checked disabled toggle">
                <div class="toggle-inner"></div>
              </div>
              <input aria-checked="true" disabled="" id="hmc-toggle" role="switch" tabindex="-1" type="checkbox">
            </div>
          </mock:shadow-root>
          Toggle
          <input class="aux-input" disabled="" name="undefined" type="hidden" value="on">
        </hmc-toggle>
      `);
    });
  });
});
