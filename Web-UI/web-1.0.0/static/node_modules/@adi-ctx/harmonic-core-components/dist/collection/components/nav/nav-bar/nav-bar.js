import { h } from '@stencil/core';
/**
 * @slot - An unnamed slot is used to pass `hmc-nav-link` components.
 * @slot logo - Used to pass in the app logo which will render on the left of the screen.
 * @slot left-actions - Used to pass in any aditional actions such as a profile menu, rendered to the left of the logo.
 * @slot right-actions - Used to pass in any aditional actions such as a profile menu, rendered on the right of the screen.
 */
export class HmcNavBar {
  constructor() {
    this.leftActionsEnabled = false;
  }
  render() {
    const { leftActionsEnabled } = this;
    const classList = {
      navbar: true,
    };
    return (h("nav", { class: classList }, h("div", { class: "left-actions" }, leftActionsEnabled && (h("div", { class: "left-side-bar" }, h("slot", { name: "left-actions" }))), h("div", { class: "logo" }, h("slot", { name: "logo" }))), h("div", { class: "links", role: "list" }, h("slot", null)), h("div", { class: "right-actions" }, h("slot", { name: "right-actions" }))));
  }
  static get is() { return "hmc-nav-bar"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["nav-bar.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["nav-bar.css"]
    };
  }
  static get properties() {
    return {
      "leftActionsEnabled": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "This prop sets whether content passed into the left actions slot will render."
        },
        "attribute": "enable-left-actions",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
  static get elementRef() { return "el"; }
}
