import { h, Host, } from '@stencil/core';
/**
 * @slot - Unnamed slot is used to pass a tab title to the component.
 */
export class HmcNavLink {
  constructor() {
    this.isDisabled = false;
    this.href = '';
    this.isIconOnly = false;
    this.linkActive = false;
    this.size = 'md';
    this.rel = undefined;
    this.target = undefined;
    this.download = undefined;
  }
  handleClick(event) {
    if (this.linkClick.emit().defaultPrevented) {
      event.preventDefault();
    }
  }
  render() {
    const { isDisabled, download, href, isIconOnly, linkActive, rel, size, target, } = this;
    const attrs = { download, href, rel, target };
    const classes = {
      'link': true,
      'active': linkActive,
      'disabled': isDisabled,
      'icon-only': isIconOnly,
      [size]: true,
    };
    return (h(Host, { role: "listitem" }, h("a", Object.assign({}, attrs, { class: classes, tabindex: isDisabled ? -1 : 0, onClick: e => this.handleClick(e) }), h("slot", { name: "icon" }), h("slot", null))));
  }
  static get is() { return "hmc-nav-link"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["nav-link.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["nav-link.css"]
    };
  }
  static get properties() {
    return {
      "isDisabled": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "disabled",
        "reflect": false,
        "defaultValue": "false"
      },
      "href": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "href",
        "reflect": false,
        "defaultValue": "''"
      },
      "isIconOnly": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "icon-only",
        "reflect": false,
        "defaultValue": "false"
      },
      "linkActive": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "link-active",
        "reflect": false,
        "defaultValue": "false"
      },
      "size": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "'md' | 'sm'",
          "resolved": "\"md\" | \"sm\"",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "size",
        "reflect": false,
        "defaultValue": "'md'"
      },
      "rel": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string | undefined",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "The relationship of the linked URL as space-separated link types.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel"
        },
        "attribute": "rel",
        "reflect": false,
        "defaultValue": "undefined"
      },
      "target": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string | undefined",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Where to display the linked URL.\nOptions are: `_self`, `_blank`, `_parent`, `_top`"
        },
        "attribute": "target",
        "reflect": false,
        "defaultValue": "undefined"
      },
      "download": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string | undefined",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Causes the browser to treat the linked URL as a download. Can be used with or without a value. Passing in \"\", the\nbrowser will suggest a filename/extension. Passing in a value suggests it as the filename."
        },
        "attribute": "download",
        "reflect": false,
        "defaultValue": "undefined"
      }
    };
  }
  static get events() {
    return [{
        "method": "linkClick",
        "name": "linkClick",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "any",
          "resolved": "any",
          "references": {}
        }
      }];
  }
  static get elementRef() { return "el"; }
}
