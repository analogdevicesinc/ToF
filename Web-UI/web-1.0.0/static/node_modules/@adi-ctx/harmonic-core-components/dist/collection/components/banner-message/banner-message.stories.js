import { html } from 'lit-html';

import { supportedIcons } from '../icon/iconsMap';

import document from './banner-message-documentation.mdx';
import readme from './readme.md';

export default {
  title: 'Components/Banner Message',
  parameters: {
    notes: readme,
    docs: {
      page: document,
    },
  },
  argTypes: {
    status: {
      control: {
        type: 'inline-radio',
        options: ['info', 'success', 'warning', 'error'],
      },
    },
    density: {
      control: {
        type: 'inline-radio',
        options: ['low', 'high'],
      },
    },
    iconName: {
      control: {
        type: 'select',
        options: supportedIcons,
      },
    },
    onActionClicked: { action: 'actionClicked' },
    onBannerCloseRequested: { action: 'bannerCloseRequested' },
  },
};

const CONFIG_DATA = ['info', 'error', 'warning', 'success'];

const style = html`
  <style>
    .banners {
      display: flex;
      flex-direction: column;
      gap: 16px;
    }
  </style>
`;
export const Playground = ({
  actionText,
  density,
  iconName,
  isClosable,
  message,
  onActionClicked,
  onBannerCloseRequested,
  status,
  withIcon,
}) => html`
  <hmc-banner-message
    action-text=${actionText}
    closable=${isClosable}
    density=${density}
    icon-name=${iconName || ''}
    status=${status}
    with-icon=${withIcon}
    @actionClicked=${onActionClicked}
    @bannerCloseRequested=${onBannerCloseRequested}
  >
    ${message}
  </hmc-banner-message>
`;
Playground.args = {
  status: 'info',
  density: 'low',
  message: 'Information message',
  actionText: 'Button Label',
  withIcon: false,
  isClosable: true,
};
const Template = ({ density }) => {
  const createBanners = () =>
    CONFIG_DATA.map(
      item => html`<div>
        <hmc-banner-message
          density=${density}
          status=${item}
          closable
          action-text="Action"
          >${item[0].toLocaleUpperCase() + item.slice(1)} message
        </hmc-banner-message>
      </div> `,
    );

  return html`
    ${style}
    <div>
      <div class="banners">${createBanners()}</div>
    </div>
  `;
};

export const Statuses = Template.bind({});
Statuses.argTypes = {
  status: {
    table: {
      disable: true,
    },
  },
  iconName: {
    table: {
      disable: true,
    },
  },
};
Statuses.args = { density: 'low' };
