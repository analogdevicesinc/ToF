import { html } from 'lit-html';

import readme from './readme.md';
import document from './skeleton-documentation.mdx';

export default {
  title: 'Components/Skeleton',
  parameters: {
    notes: readme,
    docs: {
      page: document,
    },
  },
  argTypes: {
    height: {
      name: 'Height (px)',
      control: {
        type: 'number',
      },
    },
    width: {
      name: 'Width (px)',
      control: {
        type: 'number',
      },
    },
    borderRadius: {
      name: 'Border Radius (px)',
      control: {
        type: 'number',
      },
    },
  },
};

const style = html`
  <style>
    .flex {
      display: flex;
      gap: 16px;
      flex-wrap: wrap;
    }
    p {
      margin: 0;
    }
    .card-container {
      background-color: var(--hmc-color-layout-canvas);
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      padding: 24px;
      gap: 24px;
    }
  </style>
`;
export const Playground = ({ height, width, borderRadius }) => {
  return html`
    <hmc-skeleton
      style="--hmc-skeleton-height: ${height}px; --hmc-skeleton-width: ${width}px ; --hmc-skeleton-border-radius: ${borderRadius}px;"
    ></hmc-skeleton>
  `;
};

Playground.args = {
  height: 12,
  width: 100,
  borderRadius: 4,
};

export const Examples = ({ loading }) => {
  return html`
    ${style}
    <div class="flex">
      ${loading
        ? html`<div style="width: 170px; height: 32px;">
            <hmc-skeleton></hmc-skeleton>
          </div>`
        : html`<hmc-chip checkmark="" size="sm"
            ><span class="text-only">A/D Converters (ADC)</span></hmc-chip
          >`}
      ${loading
        ? html`<div style="width: 39px; height: 16px; border-radius="100px"">
            <hmc-skeleton ></hmc-skeleton>
          </div>`
        : html`<hmc-badge
            status="urgent"
            kind="digits"
            number="9999"
            max-number="999"
          ></hmc-badge>`}
      ${loading
        ? html`<div style="width: 116px; height: 32px; ">
            <hmc-skeleton></hmc-skeleton>
          </div>`
        : html`
            <hmc-button size="sm" kind="primary" class="">
              <hmc-icon slot="icon-left" name="placeholder-m"></hmc-icon>
              <span class="text text-only">Button</span>
              <hmc-icon slot="icon-right" name="placeholder-m"></hmc-icon>
            </hmc-button>
          `}

      <div class="card-container">
        <hmc-card density="medium">
          ${loading
            ? html`<div
                slot="card-header"
                style="width: 132px; height: 48px; padding-bottom: 15px; padding-top: 2px;"
              >
                <hmc-skeleton></hmc-skeleton>
              </div>`
            : html`<hmc-container-header
                slot="card-header"
                density="medium"
                heading="Card Heading"
                subtitle="Card Subtitle"
              ></hmc-container-header>`}
          ${loading
            ? html`<div
                slot="card-header-actions"
                style="width: 32px; height: 32px;"
              >
                <hmc-skeleton></hmc-skeleton>
              </div>`
            : html`<hmc-button
                slot="card-header-actions"
                icon-only=""
                size="sm"
                kind="ghost"
              >
                <hmc-icon name="placeholder-m"> </hmc-icon
              ></hmc-button>`}
          ${loading
            ? html`<div
                slot="card-header-actions"
                style="width: 32px; height: 32px;"
              >
                <hmc-skeleton></hmc-skeleton>
              </div>`
            : html`<hmc-button
                slot="card-header-actions"
                icon-only=""
                size="sm"
                kind="ghost"
              >
                <hmc-icon name="placeholder-m"> </hmc-icon
              ></hmc-button>`}

          <p>
            ${loading
              ? html`<div style="width: 100%; height: 24px;">
                  <hmc-skeleton></hmc-skeleton>
                </div>`
              : html`Card Description`}
          </p>

          <div
            slot="card-footer"
            class="card-footer-wrapper"
            style="display: flex; justify-content: flex-end; align-items: center; gap: 12px;"
          >
            ${loading
              ? html`<div style="width: 102px; height: 32px;">
                  <hmc-skeleton></hmc-skeleton>
                </div>`
              : html`<hmc-button kind="tertiary" size="sm"
                  >Button Label</hmc-button
                >`}
            ${loading
              ? html`<div style="width: 102px; height: 32px;">
                  <hmc-skeleton></hmc-skeleton>
                </div>`
              : html`<hmc-button kind="secondary" size="sm"
                  >Button Label</hmc-button
                >`}
          </div>
        </hmc-card>
      </div>
    </div>
  `;
};

Examples.args = {
  loading: true,
};

Examples.argTypes = {
  height: {
    table: {
      disable: true,
    },
  },
  width: {
    table: {
      disable: true,
    },
  },
  borderRadius: {
    table: {
      disable: true,
    },
  },
};

const script = html`
  <script>
    loadCheck = true;

    function changeVariable() {
      loadCheck = !loadCheck;
      renderComponent();
    }

    function renderComponent() {
      const container = document.getElementById('container');
      if (loadCheck) {
        container.innerHTML =
          '<div style=" padding-top: 16px; padding-left: 16px; padding-right: 16px; padding-bottom: 16px; border-left: 1px var(--hmc-color-layout-divider-default) solid; border-top: 1px var(--hmc-color-layout-divider-default) solid; border-right: 1px var(--hmc-color-layout-divider-default) solid; border-bottom: 1px var(--hmc-color-layout-divider-default) solid;"><div style="width: 80px; height: 24px; padding-bottom: 12px;"><hmc-skeleton></hmc-skeleton></div><div class="mygrid"style="display: flex;flex-wrap: wrap;gap:12px;"><div style="width: 168px; height: 32px;"><hmc-skeleton></hmc-skeleton></div><div style="width: 156px; height: 32px;"><hmc-skeleton ></hmc-skeleton></div><div style="width: 88px; height: 32px;"><hmc-skeleton></hmc-skeleton></div><div style="width: 134px; height: 32px;"><hmc-skeleton></hmc-skeleton></div><div style="width: 133px; height: 32px;"><hmc-skeleton></hmc-skeleton></div><div style="width: 237px; height: 32px;"><hmc-skeleton></hmc-skeleton></div><div style="width: 147px; height: 32px;"><hmc-skeleton></hmc-skeleton></div><div style="width: 174px; height: 32px;"><hmc-skeleton></hmc-skeleton></div><div style="width: 178px; height: 32px;"><hmc-skeleton></hmc-skeleton></div></div></div>';
      } else {
        container.innerHTML =
          '<div style=" padding-top: 16px; padding-left: 16px; padding-right: 16px; padding-bottom: 16px; border-left: 1px var(--hmc-color-layout-divider-default) solid; border-top: 1px var(--hmc-color-layout-divider-default) solid; border-right: 1px var(--hmc-color-layout-divider-default) solid; border-bottom: 1px var(--hmc-color-layout-divider-default) solid;"><div style="width: 80px; height: 24px; padding-bottom: 12px;"><div style="width: 80px; color: var(--hmc-color-content-default); font-size: 16px; font-family: Inter; font-weight: 700; line-height: 24px; word-wrap: break-word">Filter by</div></div><div class="mygrid"style="display: flex;flex-wrap: wrap;gap:12px;"><hmc-chip checkmark="" size="sm"><span class="text-only">A/D Converters (ADC)</span></hmc-chip><hmc-chip checkmark="" size="sm"><span class="text-only">iButton and memory</span></hmc-chip><hmc-chip checkmark="" size="sm"><span class="text-only">Amplifiers</span></hmc-chip><hmc-chip checkmark="" size="sm"><span class="text-only">Analog functions</span></hmc-chip><hmc-chip checkmark="" size="sm"><span class="text-only">Clock and timing</span></hmc-chip><hmc-chip checkmark="" size="sm"><span class="text-only">Processors and microcontrollers</span></hmc-chip><hmc-chip checkmark="" selected="" size="sm"><span class="text-only">Audio products</span></hmc-chip><hmc-chip checkmark="" selected="" size="sm"<span class="text-only">Sensors and MEMS</span></hmc-chip><hmc-chip checkmark="" selected="" size="sm"><span class="text-only">Power management</span></hmc-chip></div></div>';
      }
    }
    renderComponent();
  </script>
`;

export const ChipExample = ({}) => {
  return html`
    ${script}
    <div id="container"></div>
    <hmc-button
      size="md"
      kind="primary"
      style="display:inline-block; padding-top:16px;"
      onclick="changeVariable()"
    >
      <span class="text text-only">Toggle Loading</span>
    </hmc-button>
  `;
};

ChipExample.argTypes = {
  height: {
    table: {
      disable: true,
    },
  },
  width: {
    table: {
      disable: true,
    },
  },
  borderRadius: {
    table: {
      disable: true,
    },
  },
};
