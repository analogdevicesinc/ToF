import { html } from 'lit-html';

import documentation from './modal-documentation.mdx';
import readme from './readme.md';

export default {
  title: 'Components/Modal',
  parameters: {
    notes: readme,
    docs: {
      page: documentation,
    },
  },
  argTypes: {
    density: {
      control: {
        type: 'inline-radio',
        options: ['low', 'medium'],
      },
    },
    onModalClose: { action: 'modalClose' },
  },
};

const Template = ({
  isOpen,
  density,
  hasHeader,
  hasHeaderIcon,
  headerTitle,
  headerSubtitle,
  hasFooter,
  onModalClose,
  overlayDismiss,
}) => {
  const Complex = html`
    <div class="modal-with-scroll">
      <hmc-modal
        open=${isOpen}
        density=${density}
        overlay-dismiss=${overlayDismiss}
        @modalCloseRequest="${onModalClose}"
      >
        ${hasHeader
          ? html` <hmc-container-header
              slot="modal-header"
              heading=${headerTitle}
              subtitle=${headerSubtitle}
              density=${density}
            >
              ${hasHeaderIcon &&
              html`<hmc-icon slot="icon" name="placeholder-m"></hmc-icon>`}
            </hmc-container-header>`
          : ''}
        <div>
          This component detects the presence of header and footer on load. To
          see what the modal looks like without a header or footer, configure in
          the control panel and reload the page.
        </div>
        ${hasFooter
          ? html`
              <div
                slot="modal-footer"
                style="display: flex; justify-content: flex-end; gap: ${density ===
                'low'
                  ? '16px'
                  : '12px'}"
              >
                <hmc-button
                  kind="secondary"
                  size=${density === 'low' ? 'md' : 'sm'}
                >
                  Secondary Action
                </hmc-button>
                <hmc-button size=${density === 'low' ? 'md' : 'sm'}
                  >Primary Action</hmc-button
                >
              </div>
            `
          : ''}
      </hmc-modal>
    </div>
  `;

  const dummyCard = html`
    <hmc-card>
      <div class="card-content">
        <div>Dummy Main Content</div>
      </div>
      <div slot="card-footer" class="card-footer">
        <hmc-button full-width kind="secondary">Cancel</hmc-button>
        <hmc-button full-width kind="primary">Apply</hmc-button>
      </div>
    </hmc-card>
  `;

  const dummyContent = html`
    <div class="card-container">
      ${dummyCard} ${dummyCard} ${dummyCard} ${dummyCard}
    </div>
  `;

  return html`
    ${styles}
    <div class="container">${dummyContent}${Complex}</div>
  `;
};

export const Modal = Template.bind({});
Modal.args = {
  isOpen: true,
  overlayDismiss: true,
  density: 'low',
  hasFooter: true,
  hasHeader: true,
  hasHeaderIcon: false,
  headerTitle: 'Header Title',
  headerSubtitle: 'Header subtitle',
};

const styles = html`
  <style>
    body {
      font-family: Inter, sans-serif;
      width: 100%;
      overflow: auto;
    }

    .title {
      font-family: 'Inter', sans-serif;
      font-size: 21px;
      line-height: 24px;
      font-weight: 500;
      color: #212836;
      margin: 0;
    }

    .card-container {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
      grid-gap: 2rem;
    }

    .card {
      border: 1px solid #686c7d);
    }

    .card-content {
      display: flex;
      min-height: 300px;
      align-items: center;
      justify-content: center;
      background: #f1f2f4;
    }

    .card-footer {
      display: flex;
      gap: 16px;
    }

    .text {
      font-family: 'Inter', sans-serif;
      font-size: 14px;
      line-height: 20px;
      color: #212836;
    }

    .link {
      font-family: 'Inter', sans-serif;
      font-size: 14px;
      line-height: 20px;
      color: #0067b9;
      text-decoration: none;
      margin-top: 4px;
    }

    .modal-with-scroll {
      width: 100%;
      float: left;
    }
  </style>
`;
