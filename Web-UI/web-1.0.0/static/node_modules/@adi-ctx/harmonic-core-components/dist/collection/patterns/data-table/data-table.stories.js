import { html } from 'lit-html';
import { styleMap } from 'lit-html/directives/style-map.js';

import document from './data-table-documentation.mdx';
import readme from './readme.md';

export default {
  title: 'Templates/Data Table',
  parameters: {
    notes: readme,
    docs: {
      page: document,
    },
  },
  argTypes: {
    size: {
      control: {
        type: 'inline-radio',
        options: ['sm', 'md', 'lg'],
      },
    },
  },
};

const style = html`
  <style>
    body {
      font-family: 'Inter';
    }
    .story-description {
      color: var(--hmc-color-content-default);
    }
    h2 {
      font-size: 28px;
      text-transform: capitalize;
      font-family: Barlow, sans-serif;
      font-weight: 600;
      line-height: 36px;
    }
    .sm {
      padding-top: 6px;
      padding-bottom: 6px;
    }
    .md {
      padding-top: 10px;
      padding-bottom: 10px;
    }
    .lg {
      padding-top: 14px;
      padding-bottom: 14px;
    }
    .la {
      text-align: left;
    }
    .ra {
      text-align: right;
    }
    table {
      display: block;
      border-spacing: 0;
      width: 100%;
      overflow: auto;
      color: var(--hmc-color-content-default, #212836);
    }
    caption {
      text-align: left;
    }
    caption .title {
      font-family: Barlow, sans-serif;
      font-size: 24px;
      line-height: 32px;
      font-weight: 600;
    }
    caption .description {
      font-familty: Inter, sans-serif;
      font-size: 16px;
      line-height: 24px;
      font-weight: 400;
      color: var(--hmc-color-content-subtle, #686c7d);
    }
    .sticky {
      max-height: 250px;
    }
    .sticky thead {
      position: sticky;
      top: 0;
    }
    .sticky thead::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 10px;
      background: transparent;
      z-index: -1;
      box-shadow: 0px 0px 5px 0px rgba(34, 37, 47, 0.1),
        0px 10px 10px 0px rgba(34, 37, 47, 0.1);
    }
    tr:nth-child(2n + 2) {
      background-color: var(--hmc-color-layout-canvas, #f1f2f4);
    }
    td,
    th {
      font-family: Inter, sans-serif;
      font-size: 14px;
      line-height: 20px;
      padding-left: 8px;
      padding-right: 8px;
    }
    th {
      font-weight: 700;
      border-bottom: 1px solid var(--hmc-color-layout-divider-strong, #212836);
      background-color: var(--hmc-color-layout-container, #ffffff);
    }
    td {
      font-weight: 400;
    }
  </style>
`;

const tableData = [
  ['VCC Output Voltage', 'VCC', '1mA ≤ IVCC ≤ 15mA', '4.75', '5.00', '5.25'],
  [
    'VCC Output Voltage',
    'VCC',
    '6V ≤ VIN ≤ 60V; IVCC = 1mA',
    '4.75',
    '5.00',
    '5.25',
  ],
  ['VCC Undervoltage Threshold', 'VCC-UVR', 'Rising', '3.65', '3.80', '3.90'],
  ['VCC Undervoltage Threshold', 'VCC-UVF', 'Falling', '3.43', '3.58', '3.68'],
  [
    'EXTVCC Switchover Threshold',
    'ETXVCC-UVR',
    'EXTVCC Rising',
    '4.56',
    '4.70',
    '4.84',
  ],
  [
    'EXTVCC Switchover Threshold',
    'ETXVCC-UVF',
    'EXTVCC Falling',
    '4.30',
    '4.45',
    '4.60',
  ],
  [
    'EXTVCC Dropout',
    'EXTVCCDO',
    'VEXTVCC = 4.75V, IVCC = 15mA',
    '-',
    '-',
    '0.3',
  ],
];

const createRow = (data, size) => html`
  <tr>
    ${data.map((label, index) => createCell(label, size, index <= 2))}
  </tr>
`;

const createCell = (label, size, isLeftAligned) => html`
  <td class="${isLeftAligned ? 'la' : 'ra'} ${size}">${label}</td>
`;

const Template = ({ size, stickyHeader }) => {
  return html`
    ${style}
    <div class="story-description">
      <h2>Data Tables</h2>
      <p>
        This is an example of a simple data table. You can copy the CSS and HTML
        from the React Usage tab as a starting point for your own
        implementation.
      </p>
    </div>

    <div>
      <table role="table" tabindex="0" class=${stickyHeader ? 'sticky' : ''}>
        <caption>
          <div class="title">Data Table Title</div>
          <div class="description">Additional Description</div>
        </caption>
        <thead>
          <tr>
            <th
              scope="col"
              class="la ${size}"
              style=${styleMap({ 'min-width': '210px' })}
            >
              Specifications
            </th>
            <th
              scope="col"
              class="la ${size}"
              style=${styleMap({ 'min-width': '90px' })}
            >
              Symbol
            </th>
            <th
              scope="col"
              class="la ${size}"
              style=${styleMap({ 'min-width': '220px' })}
            >
              Conditions
            </th>
            <th
              scope="col"
              class="ra ${size}"
              style=${styleMap({ 'min-width': '70px' })}
            >
              Min (V)
            </th>
            <th
              scope="col"
              class="ra ${size}"
              style=${styleMap({ 'min-width': '90px' })}
            >
              Typical (V)
            </th>
            <th
              scope="col"
              class="ra ${size}"
              style=${styleMap({ 'min-width': '70px' })}
            >
              Max (V)
            </th>
          </tr>
        </thead>
        <tbody>
          ${tableData.map(rowData => createRow(rowData, size))}
        </tbody>
      </table>
    </div>
  `;
};

export const DataTable = Template.bind({});
DataTable.args = {
  size: 'md',
  stickyHeader: false,
};
