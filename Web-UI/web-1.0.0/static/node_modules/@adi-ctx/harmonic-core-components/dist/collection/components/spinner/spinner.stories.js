import { html } from 'lit-html';

import readme from './readme.md';
import document from './spinner-documentation.mdx';

export default {
  title: 'Components/Spinner',
  parameters: {
    notes: readme,
    docs: {
      page: document,
    },
  },
  argTypes: {
    size: {
      control: {
        type: 'inline-radio',
        options: ['sm', 'md'],
      },
    },
    kind: {
      control: {
        type: 'inline-radio',
        options: ['primary', 'secondary', 'tertiary', 'inverse'],
      },
    },
  },
};

const style = html`
  <style>
    .flex {
      display: flex;
      gap: 16px;
      width: max-content;
      align-items: flex-end;
    }
  </style>
`;
export const Playground = ({ size, kind }) => {
  return html` <hmc-spinner kind="${kind}" size="${size}"></hmc-spinner> `;
};
Playground.args = {
  size: 'sm',
  kind: 'primary',
};
const Template = ({ size }) => {
  return html`
    ${style}

    <div class="flex">
      <td>
        <hmc-spinner kind="primary" size=${size}></hmc-spinner>
      </td>
      <td>
        <hmc-spinner kind="secondary" size=${size}></hmc-spinner>
      </td>
      <td>
        <hmc-spinner kind="tertiary" size=${size}></hmc-spinner>
      </td>
    </div>
  `;
};
export const Kinds = Template.bind({});

export const Sizes = ({ kind }) => {
  return html`
    ${style}

    <div class="flex">
      <hmc-spinner kind=${kind} size="md"></hmc-spinner>

      <hmc-spinner kind=${kind} size="sm"></hmc-spinner>
    </div>
  `;
};
Kinds.args = {
  size: 'sm',
};
Kinds.argTypes = {
  kind: {
    table: {
      disable: true,
    },
  },
};
Sizes.args = {
  kind: 'primary',
};
Sizes.argTypes = {
  size: {
    table: {
      disable: true,
    },
  },
};
