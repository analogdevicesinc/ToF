import { html } from 'lit-html';
import { styleMap } from 'lit-html/directives/style-map.js';

import placeholderImg from '../../stories/assets/placeholder.png';

import documentation from './card-documentation.mdx';
import readme from './readme.md';

export default {
  title: 'Components/Card',
  parameters: {
    notes: readme,
    docs: { page: documentation },
  },
  argTypes: {
    density: {
      control: {
        type: 'inline-radio',
        options: ['medium', 'high'],
      },
    },
  },
};

const style = html`
  <style>
    p {
      margin: 0;
    }
    .card-container {
      background-color: var(--hmc-color-layout-canvas);
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      padding: 24px;
      gap: 24px;
    }
  </style>
`;
export const Playground = ({
  heading,
  subtitle,
  density,
  description,
  hasHeader,
  hasFooter,
  hasHeaderIcon,
  hasImage,
}) => {
  const foot = html`<div
    slot="card-footer"
    class="card-footer-wrapper"
    style=${styleMap({
      'display': 'flex',
      'justify-content': 'flex-end',
      'align-items': 'center',
      'gap': density === 'high' ? '8px' : '12px',
    })}
  >
    <hmc-button kind="tertiary" size="sm">Button Label</hmc-button>
    <hmc-button kind="secondary" size="sm">Button Label</hmc-button>
  </div>`;
  const slotButton = html`<hmc-button
    slot="card-header-actions"
    icon-only
    size="sm"
    kind="ghost"
  >
    <hmc-icon name="placeholder-m" />
  </hmc-button> `;
  const head = html`<hmc-container-header
    slot="card-header"
    density=${density}
    heading=${heading}
    subtitle=${subtitle}
    >${hasHeaderIcon
      ? html`<hmc-icon slot="icon" name="placeholder-m"></hmc-icon> `
      : ''}</hmc-container-header
  >`;
  return html`
    ${style}
    <div class="card-container">
      <hmc-card density=${density}>
        ${hasHeader ? html`${head} ${slotButton} ${slotButton}` : null}
        <p>${description}</p>
        ${hasImage ? html`<img src=${placeholderImg} alt="" />` : null}
        ${hasFooter ? foot : null}
      </hmc-card>
    </div>
  `;
};
Playground.args = {
  heading: 'Card Heading',
  subtitle: 'Card Subtitle',
  description: 'Card Description',
  hasHeader: true,
  hasImage: true,
  density: 'medium',
  hasFooter: true,
  hasHeaderIcon: true,
};
const Template = ({ density }) => {
  const foot = html`<div
    slot="card-footer"
    class="card-footer-wrapper"
    style=${styleMap({
      'display': 'flex',
      'justify-content': 'flex-end',
      'align-items': 'center',
      'gap': density === 'high' ? '8px' : '12px',
    })}
  >
    <hmc-button kind="tertiary" size="sm">Cancel</hmc-button>
    <hmc-button kind="secondary" size="sm">Accept</hmc-button>
  </div>`;

  return html`
    ${style}
    <div>
      <div style="padding: 16px;">

          <div class="card-container">

            <hmc-card density=${density}>
              <hmc-container-header
                slot="card-header"
                density=${density}
                heading="Header and Footer"
                ><hmc-icon
                  slot="icon"
                  name="info-m"
                ></hmc-icon> </hmc-container-header
              >

              <p>This is a card with a header and a footer.</p>
              ${foot}
            </hmc-card>
            <hmc-card density=${density}>
              <hmc-container-header
                slot="card-header"
                density=${density}
                heading="No Footer"
                ><hmc-icon
                        slot="icon"
                        name="info-m"
                      ></hmc-icon>
              </hmc-container-header>
              <p>This is a card without a footer.</p>
            </hmc-card>
            <hmc-card density=${density}>
              <p>This is a card without a header.</p>
              ${foot}
            </hmc-card>
          </div>

          </div>
        </div>
      </div>
    </div>
  `;
};

export const Variants = Template.bind({});
export const Densities = ({ hasImage }) => html`
    ${style}
    <div>
      <div style="padding: 16px; padding-right: 33%;">

          <div class="card-container">
            <hmc-card density="medium">
              <hmc-container-header
                slot="card-header"
                density="medium"
                heading="Medium-Density"
                subtitle="For sparse interfaces"
                ><hmc-icon
                        slot="icon"
                        name="placeholder-m"
                      ></hmc-icon>
              </hmc-container-header>
              <p>Replace this panel by your content.</p>
              ${hasImage ? html`<img src=${placeholderImg} alt="" />` : null}
              <div
                  slot="card-footer"
                  class="card-footer-wrapper"
                  style=${styleMap({
                    'display': 'flex',
                    'justify-content': 'flex-end',
                    'align-items': 'center',
                    'gap': '12px',
                  })}
                >
                  <hmc-button kind="tertiary" size="sm">Cancel</hmc-button>
                  <hmc-button kind="secondary" size="sm">Accept</hmc-button>
                </div>
 </hmc-card>
            <hmc-card density="high">
              <hmc-container-header
                slot="card-header"
                density="high"
                heading="High-Density"
                subtitle="For dense interfaces"
                ><hmc-icon
                        slot="icon"
                        name="placeholder-m"
                      ></hmc-icon>
              </hmc-container-header>
              <p>Replace this panel by your content.</p>
              ${hasImage ? html`<img src=${placeholderImg} alt="" />` : null}
              <div
                slot="card-footer"
                class="card-footer-wrapper"
                style=${styleMap({
                  'display': 'flex',
                  'justify-content': 'flex-end',
                  'align-items': 'center',
                  'gap': '8px',
                })}
              >
                <hmc-button kind="tertiary" size="sm">Cancel</hmc-button>
                <hmc-button kind="secondary" size="sm">Accept</hmc-button>
              </div>
            </hmc-card>
          </div>

          </div>
        </div>
      </div>
    </div>
  `;

Densities.args = { hasImage: false };
Densities.argTypes = {
  density: {
    table: {
      disable: true,
    },
  },
};
