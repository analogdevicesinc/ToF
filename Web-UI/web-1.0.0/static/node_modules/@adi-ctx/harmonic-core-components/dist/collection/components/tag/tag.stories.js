import { html } from 'lit-html';

import { supportedIcons } from '../icon/iconsMap';

import readme from './readme.md';
import document from './tag-documentation.mdx';

export default {
  title: 'Components/Tag',
  parameters: {
    notes: readme,
    docs: {
      page: document,
    },
  },
  args: {
    status: 'info',
  },
  argTypes: {
    size: {
      control: {
        type: 'inline-radio',
        options: ['sm', 'md'],
      },
      table: {
        disable: true,
      },
    },
    status: {
      control: {
        type: 'inline-radio',
        options: ['info', 'success', 'warning', 'error', 'highlight'],
      },
      table: {
        disable: true,
      },
    },
    emphasis: {
      control: {
        type: 'inline-radio',
        options: ['subtle', 'strong'],
      },
      table: {
        disable: true,
      },
    },
    iconName: {
      control: {
        type: 'select',
        options: supportedIcons,
      },
      table: {
        disable: true,
      },
    },
    isFullWidth: {
      control: {
        type: 'boolean',
      },
      table: {
        disable: true,
      },
    },
  },
};

const style = html`
  <style>
    .tags {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(150px, 0.5fr));
      gap: 16px;
    }
  </style>
`;
export const Playground = ({
  status,
  text,
  emphasis,
  isFullWidth,
  iconName,
  size,
  withIcon,
}) => {
  return html`
    <hmc-tag
      emphasis=${emphasis}
      full-width=${isFullWidth}
      icon-name="${iconName}"
      size=${size}
      status=${status}
      with-icon=${withIcon}
    >
      ${text}
    </hmc-tag>
  `;
};
Playground.args = {
  emphasis: 'subtle',
  iconName: 'info-s',
  isFullWidth: false,
  size: 'md',
  status: 'info',
  text: 'Information message',
  withIcon: true,
};
Playground.argTypes = {
  size: {
    table: {
      disable: false,
    },
  },
  status: {
    table: {
      disable: false,
    },
  },
  isFullWidth: {
    table: {
      disable: false,
    },
  },
  text: {
    table: {
      disable: false,
    },
  },
  withIcon: {
    table: {
      disable: false,
    },
  },
};
const Variants = ({ emphasis, size }) => {
  return html`
    ${style}
    <div>
      <div class="tags">
        <hmc-tag status="info" size=${size} emphasis=${emphasis}>
          Info message
        </hmc-tag>
        <hmc-tag status="success" size=${size} emphasis=${emphasis}>
          Success message
        </hmc-tag>
        <hmc-tag status="warning" size=${size} emphasis=${emphasis}>
          Warning message
        </hmc-tag>
        <hmc-tag status="error" size=${size} emphasis=${emphasis}>
          Error message
        </hmc-tag>
        <hmc-tag status="highlight" size=${size} emphasis=${emphasis}>
          Highlight message
        </hmc-tag>
      </div>
    </div>
  `;
};
export const Statuses = Variants.bind({});
export const Sizes = ({ status, emphasis }) => {
  return html`
    ${style}
    <div>
      <div class="tags">
        <hmc-tag status=${status} size="md" emphasis=${emphasis}>
          ${status[0].toLocaleUpperCase() + status.slice(1)} message
        </hmc-tag>
        <hmc-tag status=${status} size="sm" emphasis=${emphasis}>
          ${status[0].toLocaleUpperCase() + status.slice(1)} message
        </hmc-tag>
      </div>
    </div>
  `;
};
Statuses.args = { emphasis: 'subtle', size: 'md' };
Statuses.argTypes = {
  size: {
    table: {
      disable: false,
    },
  },
  emphasis: {
    table: {
      disable: false,
    },
  },
};
Sizes.args = { emphasis: 'subtle', status: 'info' };
Sizes.argTypes = {
  status: {
    table: {
      disable: false,
    },
  },
  emphasis: {
    table: {
      disable: false,
    },
  },
};
