import { Host, h } from '@stencil/core';
/**
 * @slot - An unnamed slot is used to pass in child components.
 */
export class HmcThemeProvider {
  constructor() {
    this.theme = 'light';
  }
  render() {
    const { theme } = this;
    const classes = {
      [`hmc-theme--${theme}`]: true,
    };
    return (h(Host, { class: classes }, h("slot", null)));
  }
  static get is() { return "hmc-theme-provider"; }
  static get originalStyleUrls() {
    return {
      "$": ["theme-provider.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["theme-provider.css"]
    };
  }
  static get properties() {
    return {
      "theme": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "'dark' | 'light'",
          "resolved": "\"dark\" | \"light\"",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "The theme to apply to the UI tokens. This will remap CSS variables for all child components.\nAvailable options are: 'light', and 'dark'"
        },
        "attribute": "theme",
        "reflect": false,
        "defaultValue": "'light'"
      }
    };
  }
}
