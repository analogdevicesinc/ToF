import { test, expect } from '@playwright/test';
import { testUtils } from '../../../utils/test.util';
test.describe('Toast Snapshot Test', () => {
  test.beforeEach(async ({ page }) => {
    await testUtils({ page });
  });
  test('High Density with Icon', async ({ page }) => {
    await page.goto('/iframe.html?args=density:high;withIcon:true&id=components-toast-message--toast-message&viewMode=story');
    await expect(page.locator('hmc-toast-message')).toHaveScreenshot();
  });
  test('Success with Close Button', async ({ page }) => {
    await page.goto('/iframe.html?args=status:success;hasCloseButton:true&id=components-toast-message--toast-message&viewMode=story');
    await expect(page.locator('hmc-toast-message')).toHaveScreenshot();
  });
  test('Warning Toast', async ({ page }) => {
    await page.goto('/iframe.html?args=status:warning&id=components-toast-message--toast-message&viewMode=story');
    await expect(page.locator('hmc-toast-message')).toHaveScreenshot();
  });
  test('Error Toast', async ({ page }) => {
    await page.goto('/iframe.html?args=status:error&id=components-toast-message--toast-message&viewMode=story');
    await expect(page.locator('hmc-toast-message')).toHaveScreenshot();
  });
});
