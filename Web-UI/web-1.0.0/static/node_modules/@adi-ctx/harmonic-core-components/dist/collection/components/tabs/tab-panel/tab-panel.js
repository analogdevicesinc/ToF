import { h, Host } from '@stencil/core';
const PANEL_ID = 'hmc-panel-id-';
/**
 * @slot - Unnamed slot is used to pass in the panel's content.
 */
export class HmcTabPanel {
  constructor() {
    this.name = undefined;
    this.isSelected = false;
  }
  handleKeyEvent(ev) {
    ev.stopPropagation();
  }
  componentWillLoad() {
    this._id = this.el.id.length > 0 ? this.el.id : PANEL_ID + panelCount++;
  }
  render() {
    const { isSelected } = this;
    const classList = {
      'title-container': true,
      'selected': isSelected,
    };
    return (h(Host, { role: "tabpanel", tabindex: "0", class: classList, id: this._id }, h("slot", null)));
  }
  static get is() { return "hmc-tab-panel"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["tab-panel.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["tab-panel.css"]
    };
  }
  static get properties() {
    return {
      "name": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Specifies internal name of the tab.\nIt is used for connecting the panel to the controlling tab."
        },
        "attribute": "name",
        "reflect": false
      },
      "isSelected": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Tab panel will only be visible if this is set `true`.\nDefault: 'false'."
        },
        "attribute": "selected",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
  static get elementRef() { return "el"; }
  static get listeners() {
    return [{
        "name": "keydown",
        "method": "handleKeyEvent",
        "target": undefined,
        "capture": false,
        "passive": false
      }];
  }
}
let panelCount = 0;
