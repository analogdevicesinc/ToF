import { html } from 'lit-html';

import { supportedIcons } from '../icon/iconsMap';

import readme from './readme.md';
import document from './toast-message-documentation.mdx';

export default {
  title: 'Components/Toast Message',
  parameters: {
    notes: readme,
    docs: {
      page: document,
    },
  },
  argTypes: {
    status: {
      control: {
        type: 'inline-radio',
        options: ['info', 'success', 'warning', 'error'],
      },
    },
    density: {
      control: {
        type: 'inline-radio',
        options: ['low', 'high'],
      },
    },
    iconName: {
      control: {
        type: 'select',
        options: supportedIcons,
      },
    },
    onActionClicked: { action: 'actionClicked' },
    onToastClosing: { action: 'toastClosing' },
    onToastClosed: { action: 'toastClosed' },
  },
};

const script = html`
  <script>
    document
      .querySelector('hmc-button')
      .addEventListener(
        'click',
        () => (document.querySelector('hmc-toast-message').isOpen = true),
      );
  </script>
`;

const Template = ({
  actionText,
  density,
  iconName,
  hasCloseButton,
  message,
  onActionClicked,
  onToastClosing,
  onToastClosed,
  status,
  withIcon,
  open,
  timeout,
}) => {
  return html`
    ${script}
    <div>
      <hmc-button>Open Toast</hmc-button>
      <hmc-toast-message
        action-text=${actionText}
        close-button=${hasCloseButton}
        density=${density}
        icon-name=${iconName || ''}
        status=${status}
        with-icon=${withIcon}
        open=${open}
        timeout=${timeout}
        @actionClicked=${onActionClicked}
        @toastClosing=${onToastClosing}
        @toastClosed=${onToastClosed}
      >
        ${message}
      </hmc-toast-message>
    </div>
  `;
};

export const ToastMessage = Template.bind({});
ToastMessage.args = {
  status: 'info',
  density: 'low',
  message: 'Information message',
  actionText: 'Button Label',
  withIcon: false,
  hasCloseButton: true,
  open: true,
  timeout: 5000,
};
