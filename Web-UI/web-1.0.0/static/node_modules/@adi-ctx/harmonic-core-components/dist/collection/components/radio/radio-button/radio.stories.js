import { html } from 'lit-html';

import groupDocumentation from '../radio-group/radio-group-documentation.mdx';
import groupReadme from '../radio-group/readme.md';

import documentation from './radio-button-documentation.mdx';
import readme from './readme.md';

const style = html`<style>
  .radios {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  }
</style>`;

export const Playground = ({
  isChecked,
  isDisabled,
  size,
  onRadioButtonClicked,
  hasHint,
}) =>
  html`
    <style>
      .masters {
        display: flex;
        align-items: center;
      }
      .masters hmc-radio-button {
        margin-right: 44px;
      }
    </style>
    <div class="masters">
      <hmc-radio-button
        value="one"
        checked=${isChecked}
        disabled=${isDisabled}
        size=${size}
        @radioButtonClicked=${onRadioButtonClicked}
      >
      </hmc-radio-button>
      <hmc-radio-button
        value="label"
        checked=${isChecked}
        disabled=${isDisabled}
        size=${size}
        label="Label"
        @radioButtonClicked=${onRadioButtonClicked}
      >
        ${hasHint &&
        html`
          <span slot="hint" class="hint">
            <hmc-icon name="info-xs"></hmc-icon>
          </span>
        `}
      </hmc-radio-button>
    </div>
  `;
Playground.args = {
  isChecked: false,
  isDisabled: false,
  hasHint: false,
  size: 'md',
};
Playground.argTypes = {
  onRadioButtonClicked: {
    action: 'radioButtonClicked',
  },
  size: {
    control: {
      type: 'inline-radio',
      options: ['xs', 'md'],
    },
  },
};

const Template = () =>
  html`
    ${style}
    <div class="radios">
      <hmc-radio-button label="Off"></hmc-radio-button>
      <hmc-radio-button disabled="true" label="Disabled"></hmc-radio-button>
      <hmc-radio-button checked="true" label="On"></hmc-radio-button>
      <hmc-radio-button
        checked="true"
        disabled="true"
        label="Disabled"
      ></hmc-radio-button>
    </div>
  `;

export const States = Template.bind({});

export const RadioGroup = args => {
  return html`
    <hmc-radio-group @radioChanged=${args.onRadioChanged} value="five">
      <div style="display: flex; flex-direction: column;">
        <hmc-radio-button
          value="one"
          label="One"
          size=${args.size}
        ></hmc-radio-button>
        <hmc-radio-button
          value="two"
          label="Two"
          size=${args.size}
        ></hmc-radio-button>
        <hmc-radio-button
          value="three"
          label="Three"
          size=${args.size}
        ></hmc-radio-button>
        <hmc-radio-button
          disabled="true"
          value="four"
          label="Disabled"
          size=${args.size}
        ></hmc-radio-button>
        <hmc-radio-button
          disabled
          value="five"
          label="Disabled and prechecked"
          size=${args.size}
        ></hmc-radio-button>
      </div>
    </hmc-radio-group>
  `;
};

RadioGroup.parameters = {
  notes: groupReadme,
  docs: {
    page: groupDocumentation,
  },
};

RadioGroup.argTypes = {
  onRadioChanged: {
    action: 'radioChanged',
  },
  size: {
    control: {
      type: 'inline-radio',
      options: ['xs', 'md'],
    },
  },
};

export default {
  title: 'Components/Radio',
  parameters: {
    notes: readme,
    docs: {
      page: documentation,
    },
  },
};
