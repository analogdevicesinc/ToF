import { test, expect } from '@playwright/test';
import { testUtils } from '../../../utils/test.util';
test.describe('Input Field Snapshot Test', () => {
  test.beforeEach(async ({ page }) => {
    await testUtils({ page });
  });
  test('Filled with Clearable', async ({ page }) => {
    await page.goto('/iframe.html?args=isClearable:true&id=components-input-field--playground&viewMode=story');
    await page.getByLabel('Label').fill('Filled Input Field');
    await expect(page.locator('#root-inner')).toHaveScreenshot();
  });
  test('Filled with Password', async ({ page }) => {
    await page.goto('/iframe.html?args=fieldType:password;label:Password;hasHint:true&id=components-input-field--playground&viewMode=story');
    await page.getByLabel('Password').fill('Filled Input Field');
    await expect(page.locator('#root-inner')).toHaveScreenshot();
  });
  test('Has Icon Left', async ({ page }) => {
    await page.goto('/iframe.html?args=iconName:placeholder-m&id=components-input-field--playground&viewMode=story');
    await expect(page.locator('#root-inner')).toHaveScreenshot();
  });
  test('Has Icon Right', async ({ page }) => {
    await page.goto('/iframe.html?args=iconName:placeholder-m;iconPlacement:right&id=components-input-field--playground&viewMode=story');
    await expect(page.locator('#root-inner')).toHaveScreenshot();
  });
  test('States', async ({ page }) => {
    await page.goto('/iframe.html?args=&id=components-input-field--states&viewMode=story');
    await expect(page.locator('.flex-display')).toHaveScreenshot();
  });
  test('Sizes', async ({ page }) => {
    await page.goto('/iframe.html?args=&id=components-input-field--sizes&viewMode=story');
    await expect(page.locator('.flex-display')).toHaveScreenshot();
  });
});
