import { Host, h } from '@stencil/core';
/**
 *@slot icon - Slot to pass an Icon onto the header of the card.

 */
export class HmcContainerHeader {
  constructor() {
    this.density = 'medium';
    this.heading = '';
    this.subtitle = '';
  }
  render() {
    const { density, heading, subtitle } = this;
    const classList = {
      'container-header': true,
      'high-density': density === 'high',
      'low-density': density === 'low',
    };
    return (h(Host, null, h("div", { class: classList }, h("div", { class: "icon-wrapper" }, h("slot", { name: "icon" })), h("div", { class: "title-group" }, h("div", { class: "heading" }, heading), h("div", { class: "subtitle" }, subtitle)))));
  }
  static get is() { return "hmc-container-header"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["container-header.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["container-header.css"]
    };
  }
  static get properties() {
    return {
      "density": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "'high' | 'medium' | 'low'",
          "resolved": "\"high\" | \"low\" | \"medium\"",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [],
          "text": "Specifies the density of information in the header. Similar to the size prop in other components.\nSpecifying 'high' will display a smaller font size allowing more information to be conveyed.\nDefault: 'low'"
        },
        "attribute": "density",
        "reflect": false,
        "defaultValue": "'medium'"
      },
      "heading": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "This is the larger of the two labels for the card header."
        },
        "attribute": "heading",
        "reflect": false,
        "defaultValue": "''"
      },
      "subtitle": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [],
          "text": "This prop provides an additional subtitle for the header. It is optional."
        },
        "attribute": "subtitle",
        "reflect": false,
        "defaultValue": "''"
      }
    };
  }
}
