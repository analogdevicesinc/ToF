import { proxyCustomElement, HTMLElement, createEvent, h } from '@stencil/core/internal/client';

const modalOverlayCss = ".overlay{display:flex;justify-content:center;align-items:center;height:100%;width:100%;position:fixed;left:0;top:0;z-index:var(--z-index-overlay, 8000);background-color:var(--hmc-color-layout-overlay, rgba(94, 103, 115, 0.75))}";

const HmcModalOverlay = /*@__PURE__*/ proxyCustomElement(class HmcModalOverlay extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.overlayClick = createEvent(this, "overlayClick", 7);
    this.isOpen = false;
  }
  onOverlayClickHandler({ target }) {
    if (target === this.overlayEl) {
      this.overlayClick.emit();
    }
  }
  render() {
    const { isOpen } = this;
    const rootClass = {
      'overlay': true,
    };
    return isOpen && (h("div", { ref: ref => (this.overlayEl = ref), class: rootClass, onClick: (e) => this.onOverlayClickHandler(e) }, h("slot", null)));
  }
  static get style() { return modalOverlayCss; }
}, [1, "hmc-modal-overlay", {
    "isOpen": [4, "open"]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["hmc-modal-overlay"];
  components.forEach(tagName => { switch (tagName) {
    case "hmc-modal-overlay":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, HmcModalOverlay);
      }
      break;
  } });
}

export { HmcModalOverlay as H, defineCustomElement as d };
