import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const skeletonCss = ":host{width:100%;height:100%}.skeleton{overflow:hidden;display:inline-block;position:relative;height:var(--hmc-skeleton-height, 100%);width:var(--hmc-skeleton-width, 100%);background:var(--hmc-color-interactive-subtle-disabled, var(--hmc-color-gray-200, #d5d8dc));border-radius:var(--hmc-skeleton-border-radius, 8px)}.skeleton::after{width:50%;position:absolute;top:0;right:0;bottom:0;left:0;background:linear-gradient(90deg, var(--hmc-color-layout-ghost, rgba(255, 255, 255, 0)) 0%, var(--hmc-color-layout-container, var(--hmc-color-gray-white, #fff)) 50%, var(--hmc-color-layout-ghost, rgba(255, 255, 255, 0)) 100%);animation:shimmer 2s infinite;content:\"\"}@keyframes shimmer{0%{transform:translateX(-100%)}25%,100%{transform:translateX(200%)}}";

const HmcSkeleton$1 = /*@__PURE__*/ proxyCustomElement(class HmcSkeleton extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
  }
  render() {
    const classes = {
      skeleton: true,
    };
    return (h(Host, null, h("div", { class: classes })));
  }
  static get style() { return skeletonCss; }
}, [1, "hmc-skeleton"]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["hmc-skeleton"];
  components.forEach(tagName => { switch (tagName) {
    case "hmc-skeleton":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, HmcSkeleton$1);
      }
      break;
  } });
}

const HmcSkeleton = HmcSkeleton$1;
const defineCustomElement = defineCustomElement$1;

export { HmcSkeleton, defineCustomElement };
