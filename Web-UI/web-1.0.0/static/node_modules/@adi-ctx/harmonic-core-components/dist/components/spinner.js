import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const spinnerCss = ".spinner{display:inline-block;box-sizing:border-box;vertical-align:middle;border-radius:50%;border:var(--spinner-border-width, 2px) solid var(--hmc-color-content-inverse, var(--hmc-color-gray-white, #fff));border-right-color:var(--hmc-color-system-primary-default, var(--hmc-color-blue-700, #0067b9));animation:1.2s linear infinite spinner-animation}.spinner.secondary{border-color:var(--hmc-color-system-primary-faint, var(--hmc-color-blue-200, #c6d8f6));border-right-color:var(--hmc-color-system-primary-default, var(--hmc-color-blue-700, #0067b9))}.spinner.tertiary{border-color:var(--hmc-color-layout-divider-silent, var(--hmc-color-gray-200, #d5d8dc));border-right-color:var(--hmc-color-content-default, var(--hmc-color-gray-black, #101820))}.spinner.inverse{border-color:var(--hmc-color-layout-divider-strong, var(--hmc-color-content-default, var(--hmc-color-gray-black, #101820)));border-right-color:var(--hmc-color-content-inverse, var(--hmc-color-gray-white, #fff))}.spinner.md{width:var(--spinner-size-md, 20px);height:var(--spinner-size-md, 20px)}.spinner.sm{width:var(--spinner-size-sm, 14px);height:var(--spinner-size-sm, 14px)}.visually-hidden{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}@keyframes spinner-animation{to{transform:rotate(360deg)}}";

const HmcSpinner = /*@__PURE__*/ proxyCustomElement(class HmcSpinner extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.size = 'sm';
    this.kind = 'primary';
  }
  render() {
    const { kind, size } = this;
    const classes = {
      spinner: true,
      [kind]: true,
      [size]: true,
    };
    return (h(Host, null, h("div", { class: classes, role: "status" }, h("span", { class: "visually-hidden" }, h("slot", null)))));
  }
  static get style() { return spinnerCss; }
}, [1, "hmc-spinner", {
    "size": [1],
    "kind": [1]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["hmc-spinner"];
  components.forEach(tagName => { switch (tagName) {
    case "hmc-spinner":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, HmcSpinner);
      }
      break;
  } });
}

export { HmcSpinner as H, defineCustomElement as d };
