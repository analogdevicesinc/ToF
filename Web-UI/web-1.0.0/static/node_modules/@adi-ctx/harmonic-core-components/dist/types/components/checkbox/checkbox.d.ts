/// <reference types="react" />
import { EventEmitter } from '../../stencil-public-runtime';
import { CheckboxSize } from '../type/size.type';
export declare class HmcCheckbox {
  focusEl: HTMLElement;
  el: HTMLElement;
  /**
   * Set checkbox label.
   */
  label: string;
  /**
   * If `true`, indicates that this checkbox is selected.
   * Default: `false`.
   */
  isChecked: boolean;
  /**
   * Specifies 'disabled' state of the checkbox.
   * Default, `false`.
   */
  isDisabled: boolean;
  /**
   * Specifies the readonly attribute of the checkbox. In this mode, the checked
   * status of the checkbox is controlled by the isChecked prop and user interaction
   * is disabled. Unlike the disabled state, the look does not change and the inner input is not disabled.
   * Default, `false`.
   */
  isReadonly: boolean;
  /**
   * Specifies size of component, reflected in label font.
   * Default: "md".
   */
  size: CheckboxSize;
  /**
   * The name of the control, which is submitted with the form data.
   */
  name: string;
  /**
   * The value of the checkbox does not mean if it's checked or not, use the `isChecked`
   * property for that.
   *
   * The value of a checkbox is analogous to the value of an `<input type="checkbox">`,
   * it's only used when the checkbox participates in a native `<form>`.
   */
  value: any | null;
  /**
   * Emitted when the checked property has changed
   * and its current status is passed as a param.
   */
  changed: EventEmitter<{
    checked: boolean;
  }>;
  private setFocus;
  private onClick;
  render(): JSX.Element;
}
