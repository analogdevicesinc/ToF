From 67470d441976b32f2e03751335e7ee99310e2998 Mon Sep 17 00:00:00 2001
From: Sivasubramaniyan Padmanaban <sivasubramaniyan.padmanaban@analog.com>
Date: Fri, 20 Oct 2023 16:53:08 +0530
Subject: [PATCH 2/2] drivers: media: i2c: adsd3500.c: Host boot ADSD3500
 firmware

Signed-off-by: Sivasubramaniyan Padmanaban <sivasubramaniyan.padmanaban@analog.com>
---
 drivers/media/i2c/adsd3500.c | 152 +++++++++++++++++++++++++++++++++++
 1 file changed, 152 insertions(+)

diff --git a/drivers/media/i2c/adsd3500.c b/drivers/media/i2c/adsd3500.c
index bbeef72419ed..1ac43ad748c3 100644
--- a/drivers/media/i2c/adsd3500.c
+++ b/drivers/media/i2c/adsd3500.c
@@ -10,6 +10,8 @@
 #include <linux/gpio/consumer.h>
 #include <linux/pinctrl/consumer.h>
 #include <linux/pwm.h>
+#include <linux/firmware.h>
+#include <linux/delay.h>
 #include <linux/i2c.h>
 #include <linux/module.h>
 #include <linux/of.h>
@@ -21,6 +23,10 @@
 #include <media/v4l2-fwnode.h>
 #include <media/v4l2-subdev.h>
 
+static bool fw_load = false;
+module_param(fw_load, bool, 0644);
+MODULE_PARM_DESC(fw_load, "Boolean enabling/disbaling firmware loading by driver");
+
 struct adsd3500_mode_info {
 	uint32_t width;
 	uint32_t height;
@@ -63,6 +69,7 @@ struct adsd3500 {
 	struct mutex lock;
 	bool streaming;
 
+	const struct firmware  *main_fw;
 	struct gpio_desc *rst_gpio;
 	struct gpio_desc *irq_gpio;
 	int    irq;
@@ -1128,6 +1135,141 @@ static int adsd3500_parse_dt(struct adsd3500 *priv){
 	return 0;
 }
 
+static int adsd3500_send_host_boot_data(struct v4l2_subdev *sd, uint8_t* data, int size)
+{
+	struct adsd3500 *adsd3500 = to_adsd3500(sd);
+	struct device *dev = adsd3500->dev;
+	struct i2c_client *client = to_i2c_client(dev);
+	int n_segments = 0, prev_seg_end = 0, curr_segment= 0;
+	int position = 0, location = 0;
+	int segment_start[100], segment_end[100], segment_size[100];
+	int header_start[100], header_end[100];
+	uint8_t header_packet[16];
+	uint8_t* data_packet = NULL;
+	int ret;
+
+	dev_dbg(adsd3500->dev, "Entered: %s\n",__func__);
+
+	data_packet = (uint8_t *)kvzalloc(PAYLOAD_MAX_CHUNK_SIZE * sizeof(uint8_t),GFP_KERNEL);
+
+	while (1) {
+		segment_size[n_segments] = (data[prev_seg_end+2]<<8)|data[prev_seg_end+1];
+		segment_start[n_segments] = prev_seg_end + HEADER_SIZE_IN_BYTES;
+		segment_end[n_segments] = segment_start[n_segments] + segment_size[n_segments];
+		header_start[n_segments] = segment_start[n_segments] - HEADER_SIZE_IN_BYTES;
+		header_end[n_segments] = segment_start[n_segments] - 1;
+		prev_seg_end = segment_end[n_segments];
+		n_segments++;
+		if (prev_seg_end >= size) {
+			break;
+		}
+	}
+
+	dev_info(adsd3500->dev, "No of headers =%02d\n", n_segments);
+
+	while (curr_segment < n_segments){
+		location = header_start[curr_segment];
+		memcpy(header_packet, &data[location], HEADER_SIZE_IN_BYTES);
+		dev_dbg(adsd3500->dev,"Current Segment = %d header_start = %d\n Size= %04X", curr_segment + 1, header_start[curr_segment], segment_size[curr_segment]);
+		dev_dbg(adsd3500->dev, "Send Header data\n");
+		ret = i2c_master_send(client, header_packet, HEADER_SIZE_IN_BYTES);
+		if (ret < 0) {
+			dev_err(adsd3500->dev, "Failed to write the header packet of segment %d\n", curr_segment);
+			return -EIO;
+		}
+		msleep(5);
+
+		if(segment_size[curr_segment] != 0){
+			location = segment_start[curr_segment];
+			memcpy(data_packet, &data[location], segment_size[curr_segment]);
+			dev_dbg(adsd3500->dev, "Send Payload data\n");
+			ret = i2c_master_send(client, data_packet, segment_size[curr_segment]);
+			if (ret < 0) {
+				dev_err(adsd3500->dev, "Failed to write the payload data of segment %d\n",curr_segment);
+				return -EIO;
+			}
+		}
+		msleep(5);
+
+		memset(header_packet, 0, sizeof(header_packet));
+		memset(data_packet, 0, PAYLOAD_MAX_CHUNK_SIZE * sizeof(uint8_t));
+		position=0;
+		curr_segment++;
+	}
+
+	kfree(data_packet);
+
+	return 0;
+}
+
+static int adsd3500_parse_fw(struct v4l2_subdev *sd)
+{
+
+	struct adsd3500 *adsd3500 = to_adsd3500(sd);
+	const struct firmware *fw = adsd3500->main_fw;
+	uint8_t* data_fw_3500 = NULL;
+	size_t data_fw_3500_size = 0;
+	int ret;
+
+	dev_dbg(adsd3500->dev, "Entered: %s\n",__func__);
+
+	data_fw_3500_size = fw->size;
+	dev_info(adsd3500->dev, "Firmware size = %ld\n",data_fw_3500_size);
+	data_fw_3500 = (uint8_t *)kvzalloc(data_fw_3500_size * sizeof(uint8_t),GFP_KERNEL);
+	if(!data_fw_3500){
+		dev_err(adsd3500->dev, "Failed to allocate memory for FW data\n");
+		return -ENOMEM;
+	}
+
+	memcpy(data_fw_3500, fw->data, data_fw_3500_size);
+	dev_dbg(adsd3500->dev, "FW data 1:%02X  2:%02X  3:%02X  4:%02X\n",data_fw_3500[0], data_fw_3500[1], data_fw_3500[2], data_fw_3500[3]);
+	ret = adsd3500_send_host_boot_data(sd, data_fw_3500, data_fw_3500_size);
+	if(ret != 0){
+		dev_err(adsd3500->dev, "Failed to send the host boot firmware\n");
+		kfree(data_fw_3500);
+		return ret;
+	};
+
+	kfree(data_fw_3500);
+
+	return 0;
+}
+
+
+static int adsd3500_load_firmware(struct v4l2_subdev *sd)
+{
+	struct adsd3500 *adsd3500 = to_adsd3500(sd);
+	int ret;
+
+	dev_dbg(adsd3500->dev, "Entered: %s\n",__func__);
+
+	if(fw_load){
+		dev_dbg(adsd3500->dev, "Request ADSD3500 firmware file\n");
+		ret = request_firmware(&adsd3500->main_fw, ADSD3500_FIRMWARE, adsd3500->dev);
+		if(ret < 0) {
+			dev_err(adsd3500->dev, "Failed to read firmware\n");
+			goto release_firmware;
+		}
+		else {
+			ret = adsd3500_parse_fw(sd);
+			if(ret < 0){
+				dev_err(adsd3500->dev, "Failed to parse the firmware\n");
+				goto release_firmware;
+				return ret;
+			}
+		}
+	}
+
+	release_firmware(adsd3500->main_fw);
+
+	return 0;
+
+release_firmware:
+	release_firmware(adsd3500->main_fw);
+	return ret;
+
+}
+
 static int adsd3500_probe(struct i2c_client *client)
 {
 	
@@ -1181,6 +1323,15 @@ static int adsd3500_probe(struct i2c_client *client)
 		goto free_ctrl;
 	}
 
+	if(fw_load){
+		ret = adsd3500_load_firmware(&adsd3500->sd);
+		if(ret < 0){
+			dev_err(dev, "Failed load to the adsd3500 firmware\n");
+			goto release_gpio;
+			return ret;
+		}
+	}
+
 	ret = adsd3500_entity_init_cfg(&adsd3500->sd, NULL);
 	if (ret) {
 		dev_err(dev, "Could not init v4l2 device\n");
@@ -1207,6 +1358,7 @@ static int adsd3500_probe(struct i2c_client *client)
 release_gpio:
 	gpiod_put(adsd3500->rst_gpio);
 	gpiod_put(adsd3500->irq_gpio);
+	debugfs_remove(adsd3500->debugfs);
 
 	return ret;
 }
-- 
2.28.0

